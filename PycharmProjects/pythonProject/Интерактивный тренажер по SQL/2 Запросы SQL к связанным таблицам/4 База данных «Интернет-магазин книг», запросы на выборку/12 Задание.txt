Показать динамику цен книг для оплаченных заказов за 2019 и 2020 год (см. Результат (скриншот)).
Т.е. необходимо показать как менялись цены книг относительно предыдущих заказов.

Поле с динамикой цен назвать: Динамика_цен
Если это первый заказ книги, то значение в поле Динамика_цен должно быть равно NULL (None).
Если цена увеличилась относительно предыдущего заказа этой же книги, то ставим стрелочку вверх: ↑
Если цена уменьшилась относительно предыдущего заказа этой же книги, то ставим стрелочку вниз: ↓
Если цена не изменилась относительно предыдущего заказа этой же книги, то ставим знак равно: =

Также необходимо пронумеровать записи в результирующей таблице по возрастанию начиная с 1.
Поле с нумерацией назвать: _id

Остальные поля, которые необходимо показать: Название, Дата, Цена.

Сортировать по возрастанию сначала по полю Название, потом по Дата.

Пояснение. Для 2020 года учитывать только те книги, которые уже оплачены (указана дата оплаты для шага "Оплата" в таблице buy_step).


WITH temp AS (
    SELECT ROW_NUMBER() OVER(ORDER BY Название) _id, Название, Дата, Цена, Автор
      FROM (
          SELECT b.title Название, ba.date_payment Дата, ba.price Цена, a.name_author Автор
          	FROM buy_archive ba 
          		JOIN book b USING(book_id)
                JOIN author a USING(author_id)
          UNION ALL
          SELECT b.title Название, bs.date_step_end Дата, b.price Цена, a.name_author Автор
          	FROM book b 
          		JOIN buy_book bb USING(book_id)
                JOIN buy_step bs USING(buy_id)
                JOIN step s USING(step_id)
                JOIN author a USING(author_id)
          WHERE (bs.date_step_end IS NOT NULL) AND (s.name_step = 'Оплата')
          ORDER BY Название, Дата) sub_temp
)
SELECT (@ID := _id) _id, (@Title := Название) Название, Дата, Цена,
        IF((Название, Автор) = (SELECT Название, Автор FROM temp WHERE _id = @ID - 1), 
        IF(Цена = @Price := (SELECT Цена FROM temp WHERE _id = @ID - 1), '=', 
       		IF(Цена > @Price, '↑',
            	IF(Цена < @Price, '↓', NULL))), NULL) AS Динамика_цен
	FROM temp;

+-----+-----------------------+------------+--------+--------------+
| _id | Название              | Дата       | Цена   | Динамика_цен |
+-----+-----------------------+------------+--------+--------------+
| 1   | Белая гвардия         | 2020-03-05 | 540.50 | NULL         |
| 2   | Белая гвардия         | 2019-02-10 | 520.30 | ↓            |
| 3   | Братья Карамазовы     | 2019-02-10 | 780.90 | NULL         |
| 4   | Братья Карамазовы     | 2019-03-05 | 780.90 | =            |
| 5   | Братья Карамазовы     | 2019-03-18 | 780.90 | =            |
| 6   | Игрок                 | 2019-03-05 | 480.90 | NULL         |
| 7   | Идиот                 | 2020-02-20 | 460.00 | NULL         |
| 8   | Идиот                 | 2020-03-05 | 460.00 | =            |
| 9   | Идиот                 | 2019-02-21 | 450.90 | ↓            |
| 10  | Идиот                 | 2019-02-10 | 450.90 | =            |
| 11  | Лирика                | 2020-02-28 | 518.99 | NULL         |
| 12  | Мастер и Маргарита    | 2019-02-21 | 670.60 | NULL         |
| 13  | Мастер и Маргарита    | 2019-03-18 | 670.60 | =            |
| 14  | Мастер и Маргарита    | 2020-02-20 | 670.99 | ↑            |
| 15  | Мастер и Маргарита    | 2020-03-05 | 670.99 | =            |
| 16  | Стихотворения и поэмы | 2019-03-12 | 650.00 | NULL         |
| 17  | Черный человек        | 2020-02-20 | 570.20 | NULL         |
+-----+-----------------------+------------+--------+--------------+


