Переживая о том, что хранить данные о клиентах в читабельном виде не безопасно, было решено "зашифровать" примитивным алгоритмом данные таблицы client, а именно поля name_client (т.е. имена клиентов) и email (адреса эл. почты).
(см. Скриншот снизу)

Алгоритм достаточно прост.
"Шифровать" будем следующим образом:

1. Закодируем значения данных полей воспользовавшись стандартом кодирования Base64.
Base64 - это стандарт кодирования данных.
Более подробно можно почитать в Википедии (например).
Если сказать просто, то это один из способов спрятать за набором символов наши оригинальные данные.
В MySQL есть функция: TO_BASE64(тут_имя_поля_или_просто_текст) 
Она вернёт в качестве результата закодированный текст.
Например:
Баранов Павел в кодированном виде будет выглядеть как:
0JHQsNGA0LDQvdC+0LIg0J/QsNCy0LXQuw==

2. Но, простого кодирования в Base64 не достаточно и было решено ещё перевернуть значения полей по горизонтали.
Т.е. если Баранов Павел в Base64 выглядел как: 0JHQsNGA0LDQvdC+0LIg0J/QsNCy0LXQuw== 
то в перевернутом виде он будет выглядеть так: ==wuQXL0yCNsQ/J0gIL0+CdvQDL0AGNsQHJ0
Т.е. мы просто развернули строку в обратном направлении.
В MySQL есть функция: REVERSE(тут_имя_поля_или_просто_текст)
Она как раз и позволяет перевернуть строку по горизонтали.

Таким образом, нужно обновить таблицу client закодировав значения нужных полей.

И наконец, нам нужно как-то получать в декодированном виде наши данные при выборке.
Необходимо написать запрос на выборку, который будет выводить данные из таблицы client в оригинальном виде.
Подскажу, что вам понадобятся функции  CONVERT() FROM_BASE64() REVERSE().
О не упомянутых ранее функциях вы можете почитать в интернете.

Удачи!


SELECT * FROM client;

UPDATE client
   SET name_client = REVERSE(TO_BASE64(name_client)),
       email = REVERSE(TO_BASE64(email));

SELECT * FROM client;

SELECT client_id,
       CONVERT(FROM_BASE64(REVERSE(name_client)), CHAR) name_client,
       city_id,
       CONVERT(FROM_BASE64(REVERSE(email)), CHAR) email
  FROM client;


Query result:
+-----------+-----------------+---------+----------------+
| client_id | name_client     | city_id | email          |
+-----------+-----------------+---------+----------------+
| 1         | Баранов Павел   | 3       | baranov@test   |
| 2         | Абрамова Катя   | 1       | abramova@test  |
| 3         | Семенонов Иван  | 2       | semenov@test   |
| 4         | Яковлева Галина | 1       | yakovleva@test |
+-----------+-----------------+---------+----------------+
Affected rows: 4

Affected rows: 4

Query result:
+-----------+------------------------------------------+---------+----------------------+
| client_id | name_client                              | city_id | email                |
+-----------+------------------------------------------+---------+----------------------+
| 1         | ==wuQXL0yCNsQ/J0gIL0+CdvQDL0AGNsQHJ0     | 3       | 0NXZ0Bkdv5WYyFmY     |
| 2         | ==wjRLY0wCtmQDCsQLL0+CNvQDL0AGdsQDJ0     | 1       | ==AdzVGdAFmdv1WYyJWY |
| 3         | 9CNsQLL0YCNIyCtvQ3L0+CdvQXL08CdtQHK0     | 2       | 0NXZ0Bkdv5WZtV2c     |
| 4         | =AL09CNuQvL0wC9kQDCsQLL01C9uQLL0+CtuQ/K0 | 1       | =Q3clRHQhZXZsZ3brFWe |
+-----------+------------------------------------------+---------+----------------------+
Affected rows: 4

Query result:
+-----------+-----------------+---------+----------------+
| client_id | name_client     | city_id | email          |
+-----------+-----------------+---------+----------------+
| 1         | Баранов Павел   | 3       | baranov@test   |
| 2         | Абрамова Катя   | 1       | abramova@test  |
| 3         | Семенонов Иван  | 2       | semenov@test   |
| 4         | Яковлева Галина | 1       | yakovleva@test |
+-----------+-----------------+---------+----------------+
Affected rows: 4