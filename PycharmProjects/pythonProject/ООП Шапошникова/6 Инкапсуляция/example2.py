# Хорошо, мы защитили поле от случайных изменений.
# Но как теперь получить его значение? Сделать это можно с помощью добавления метода:

class B:
    __count = 0

    def __init__(self):
        B.__count += 1

    def __del__(self):
        B.__count -= 1

    def qty_objects():
        return B.__count


a = B()
b = B()
print(B.qty_objects())

# В данном случае метод qty_object() не принимает объект (нет self),
# поэтому вызывать его надо через класс. Хотя правильнее такие методы
# делать статическими (рассматривается в одном из следующих уроков).
