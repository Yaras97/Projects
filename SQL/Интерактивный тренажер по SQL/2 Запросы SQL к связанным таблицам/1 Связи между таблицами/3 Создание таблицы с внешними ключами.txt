При создании зависимой таблицы (таблицы, которая содержит внешние ключи) необходимо учитывать, что :

каждый внешний ключ должен иметь такой же тип данных, как связанное поле главной таблицы (в наших примерах это INT);
необходимо указать главную для нее таблицу и столбец, по которому осуществляется связь:
FOREIGN KEY (связанное_поле_зависимой_таблицы)  
REFERENCES главная_таблица (связанное_поле_главной_таблицы)
По умолчанию любой столбец, кроме ключевого, может содержать значение NULL. При создании таблицы это можно переопределить,  используя  ограничение NOT NULL для этого столбца:

CREATE TABLE таблица (
    столбец_1 INT NOT NULL, 
    столбец_2 VARCHAR(10) 
);
 В созданной таблице в столбец_1 не может содержать пустое значение, а столбец_2 - может.

Для внешних ключей рекомендуется устанавливать ограничение NOT NULL (если это совместимо с другими опциями, которые будут рассмотрены в следующем шаге).


Задание
Перепишите запрос на создание таблицы book , чтобы ее структура соответствовала структуре, показанной на логической схеме (таблица genre уже создана, порядок следования столбцов - как на логической схеме в таблице book, genre_id  - внешний ключ) . Для genre_id ограничение о недопустимости пустых значений не задавать. В качестве главной таблицы для описания поля  genre_idиспользовать таблицу genre следующей структуры:

Поле    Тип, описание
genre_id    INT PRIMARY KEY AUTO_INCREMENT
name_genre  VARCHAR(30)

    CREATE TABLE book (
        book_id INT PRIMARY KEY AUTO_INCREMENT, 
        title VARCHAR(50), 
        author_id INT NOT NULL,
        genre_id INT,
        price DECIMAL(8, 2), 
        amount INT, 
        FOREIGN KEY (author_id)  REFERENCES author (author_id),
        FOREIGN KEY (genre_id)  REFERENCES genre (genre_id)
    );
DESCRIBE book;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| book_id   | int          | NO   | PRI | NULL    | auto_increment |
| title     | varchar(50)  | YES  |     | NULL    |                |
| author_id | int          | NO   | MUL | NULL    |                |
| genre_id  | int          | YES  | MUL | NULL    |                |
| price     | decimal(8,2) | YES  |     | NULL    |                |
| amount    | int          | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+


Дополнительная таблица
CREATE TABLE genre (
    genre_id serial PRIMARY KEY, 
    name_genre VARCHAR(30)
); 