class Car:
    model = "BMW"
    engine = 1.6
    def drive():
        print("Let's go")
        
Car
<class '__main__.Car'>
Car.__dict__
mappingproxy({'__module__': '__main__', 'model': 'BMW', 'engine': 1.6, 'drive': <function Car.drive at 0x000001DC222D6340>, '__dict__': <attribute '__dict__' of 'Car' objects>, '__weakref__': <attribute '__weakref__' of 'Car' objects>, '__doc__': None, '__annotations__': {}})
Car.drive()
Let's go
Car.drive
<function Car.drive at 0x000001DC222D6340>
getattr(Car, 'drive')
<function Car.drive at 0x000001DC222D6340>
getattr(Car, 'drive')()
Let's go
a = Car()
a.__dict__
{}
a.drive
<bound method Car.drive of <__main__.Car object at 0x000001DC220C2490>>
Car.drive
<function Car.drive at 0x000001DC222D6340>
a.drive()

TypeError: Car.drive() takes 0 positional arguments but 1 was given
class Car:
    model = "BMW"
    engine = 1.6
    @staticmethod
    def drive():
        print("Let's go")
        
Car.drive()
Let's go
b = Car()
b.drive()
Let's go